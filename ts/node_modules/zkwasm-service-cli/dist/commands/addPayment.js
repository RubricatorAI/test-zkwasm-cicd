"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.desc = exports.command = void 0;
const task_1 = require("../task");
exports.command = "addpayment";
exports.desc = "Add payment";
const builder = (yargs) => {
    return yargs
        .option("t", {
        alias: "tx",
        describe: "transaction hash",
        type: "string",
    })
        .option("p", {
        alias: "provider",
        describe: "Provider to connect to a network. Required to send transaction.",
        type: "string",
    })
        .option("x", {
        alias: "priv",
        describe: "The priv of user address. Required to send transaction",
        type: "string",
    })
        .option("a", {
        alias: "amount",
        describe: "amount of payment. Required to send transaction",
        type: "string",
    });
};
exports.builder = builder;
const handler = (argv) => __awaiter(void 0, void 0, void 0, function* () {
    let useTx = argv.t ? true : false;
    console.log("Begin adding payment for user", argv.u);
    if (useTx) {
        yield (0, task_1.addPaymentWithTx)(argv.t, argv.r);
    }
    else {
        console.log("Creating new transaction...");
        yield (0, task_1.addNewPayment)(argv.r, argv.p, argv.a, argv.x);
    }
});
exports.handler = handler;
